import json
import logging
from aiohttp import ClientSession
from dataclasses import dataclass
from datetime import datetime

import config


# –ø–æ–ª—É—á–∞–µ–º json —á–µ—Ä–µ–∑ get –∑–∞–ø—Ä–æ—Å –∫ api –ø–æ —Ç–æ–∫–µ–Ω—É
async def get_json(lat, lon):
    async with ClientSession() as session:
        url = 'https://api.openweathermap.org/data/2.5/weather'
        params = {'lat': lat, 'lon': lon, 'appid': config.WEATHER_API_TOKEN,
                  'units': 'metric', 'lang': 'ru'}
        async with session.get(url=url, params=params) as response:
            weather_json = await response.json()
            try:
                return json.dumps(weather_json)
            except Exception as error:
                logging.info(f'{error}')


# –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å, –ø–∞—Ä—Å–∏–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç
async def get_weather(lat, lon):
    response = await get_json(lat, lon)
    wthr = parse_response(response)
    return f'üìç: {wthr.location}, {wthr.description}\n' \
           f'üå°: {wthr.temperature}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫' \
           f' {wthr.temperature_feeling}¬∞C\n'\
           f'üí®: {wthr.wind_speed} –º/—Å\n' \
           f'üåÖ: {wthr.sunrise.strftime("%H:%M")}\n' \
           f'üåá: {wthr.sunset.strftime("%H:%M")}\n'


# —Å–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å weather
@dataclass()
class Weather:
    location: str
    temperature: float
    temperature_feeling: float
    description: str
    wind_speed: float
    sunrise: datetime
    sunset: datetime


# –ø–∞—Ä—Å–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å
def parse_response(response):
    openweather_dict = json.loads(response)
    return Weather(
        location=openweather_dict['name'],
        temperature=openweather_dict['main']['temp'],
        temperature_feeling=openweather_dict['main']['feels_like'],
        description=str(openweather_dict['weather'][0]['description']).capitalize(),
        sunrise=datetime.fromtimestamp(openweather_dict['sys']['sunrise']),
        sunset=datetime.fromtimestamp(openweather_dict['sys']['sunset']),
        wind_speed=openweather_dict['wind']['speed'])
